{
    "npc-generator-gpt.settings" : {
        "hideAlignment": {
            "name": "Hide Alignment",
            "hint": "Replaces the alignment with \"Unknown\" if you wish to hide it from the players. The alignment will still be imported into the secret section within the \"Biography\"."
        },
        "movementUnits": {
            "name": "Use Metric System",
            "hint": "When enabled, the metric system will be used for the movement measurement of the generated character, rather than the imperial system."
        },
        "systemSource": "System",
        "itemsComp": {
            "name": "Items Compendium",
            "hint": "The items compendium that will be used to populate the character sheet."
        },
        "spellsComp": {
            "name": "Spells Compendium",
            "hint": "The spells compendium that will be used to populate the character sheet."
        },
        "fuzzyThreshold": {
            "name": "Item and Spell Search Threshold",
            "hint": "At what point does the match algorithm give up. A threshold of 0.0 requires a perfect match (of both letters and location), a threshold of 1.0 would match anything."
        },
        "apiKey": {
            "name": "API Key",
            "hint": "Your private OpenAI API key. [https://platform.openai.com/account/api-keys]"
        },      
        "temperature": {
            "name": "Temperature",
            "hint": "This parameter affects the \"creativity\" of the model's responses. Higher values (close to 1) make the responses more random, while lower values (close to 0) make them more deterministic and focused. A high value might lead to greater variety in responses, but could also produce less predictable output."
        },
        "top_p": {
            "name": "Top P",
            "hint": "Also known as \"nucleus sampling\", this parameter limits the pool of words or tokens the model might select based on probability. For example, with a top_p=0.9, the model will choose from the \"top\" 90% of the predicted words or tokens, excluding less probable options. This can help strike a balance between diversity and coherence in the output."
        },        
        "freq_penality": {
            "name": "Frequency Penalty",
            "hint": "This parameter can be used to discourage answers that appear too often or are too common. Positive values penalize the use of frequent words, leading to potentially more original answers, while negative values encourage the use of frequent words."
        },
        "pres_penality": {
            "name": "Presence Penalty",
            "hint": "This parameter influences the model's tendency to include or exclude specific words or concepts in the answer. Positive values encourage the inclusion of specific concepts, while negative values discourage them."
        }        
    },

    "npc-generator-gpt.button": "Generate NPC",

    "npc-generator-gpt.dialog": {
        "title": "NGG - Preferences",
        "button": "Create NPC",
        "buttonPending": "Connecting...",
        "random": "Random",

        "type": {
            "label": "Type",
            "commoner": "Commoner",
            "npc": "NPC",
            "monster": "Monster"
        },

        "gender": {
            "label": "Gender",
            "male": "Male",
            "female": "Female"
        },

        "race": {
            "label": "Race",
            "dragonborn": "Dragonborn",
            "dwarf": {
                "common": "Dwarf",
                "hill": "Hill Dwarf",
                "mountain": "Mountain Dwarf"
            },
            "elf": {
                "common": "Elf",
                "high": "High Elf",
                "wood": "Wood Elf",
                "drow": "Dark Elf"
            },
            "gnome": {
                "common":"Gnome",
                "forest": "Forest Gnome",
                "rock": "Rock Gnome"
            },
            "halfelf": "Half-Elf",
            "halfling": {
                "common": "Halfling",
                "lightfoot": "Lightfoot Halfling",
                "stout": "Stout Halfling"
            },
            "halforc": "Half-Orc",
            "human": "Human",
            "tiefling": "Tiefling"
        },

        "subtype": {
            "class": "Class",
            "job": "Job",
            "subrace": "Subrace"
        },

        "commoner": {
            "alchemist": "Alchemist",
            "baker": "Baker",
            "barkeep": "Barkeep",
            "blacksmith": "Blacksmith",
            "butcher": "Butcher",
            "carpenter": "Carpenter",
            "cobbler": "Cobbler",
            "farmer": "Farmer",
            "fisherman": "Fisherman",
            "guard": "Guard",
            "healer": "Healer",
            "hermit": "Hermit",
            "hunter": "Hunter",
            "innkeeper": "Innkeeper",
            "merchant": "Merchant",
            "messenger": "Messenger",
            "miner": "Miner",
            "scribe": "Scribe",
            "tailor": "Tailor"
        },

        "npc": {
            "barbarian": "Barbarian",
            "bard": "Bard",
            "cleric": "Cleric",
            "druid": "Druid",
            "fighter": "Fighter",
            "monk": "Monk",
            "paladin": "Paladin",
            "ranger": "Ranger",
            "rogue": "Rogue",
            "sorcerer": "Sorcerer",
            "warlock": "Warlock",
            "wizard": "Wizard"
        },

        "cr": "CR",

        "alignment": {
            "label": "Alignment",
            "lg": "Lawful Good",
            "ng": "Neutral Good",
            "cg": "Chaotic Good",
            "ln": "Lawful Neutral",
            "n": "Neutral",
            "cn": "Chaotic Neutral",
            "le": "Lawful Evil",
            "ne": "Neutral Evil",
            "ce": "Chaotic Evil"
        }
    },

    "npc-generator-gpt.status": {
        "done": "NPC '{npcName}' Generation Completed!",
        "error": "Request Denied! Wait a few seconds and try again. (See console (F12) for more details)",
        "error2": "Error processing ChatGPT's response! Try again.",
        "error3": "Error creating the NPC! Try again.",
        "wait": "Please wait. A request is already being processed."
    },

    "npc-generator-gpt.query": {
        "pre": "Create an NPC {userQuery} for D&D 5e. Structure:",
        "name": "Name",
        "background": "Short biography",
        "appearance": "Appearance",
        "roleplaying": "Roleplaying tips",
        "readaloud": "Evocative description that the GM will read to the players",
        "equip": "Equipment",
        "spells": "Spells"
    },

    "npc-generator-gpt.sheet": {
        "appearance": "Appearance",
        "background": "Background",
        "alignment": "Alignment",
        "class": "Class/Job",
        "unknown": "Unknown",
        "roleplaying": "Roleplaying",
        "readaloud": "Read Aloud to Players",
        "equip": "Equipment",
        "spells": "Spells"
    }
}
